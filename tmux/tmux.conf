# Tmux, Session -> Window -> Panel

# 修改 pre-fix key
set -g prefix C-a
unbind C-b # 解除绑定ctrl-b
bind C-a send-prefix # 绑定ctrl-a为新的指令前缀

# 从tmux v1.6起，支持设置第二个指令前缀
set-option -g prefix2 `  # 设置`为指令前缀

# 加载配置文件的快捷指令
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# 新增面板
unbind '"'
bind - split-window -v -c '#{pane_current_path}' #  垂直方向，默认进入当前目录
bind | split-window -h -c '#{pane_current_path}' #  水平方向，默认进入当前目录

# 开启鼠标支持
set-option -g mouse on

# 快速切换面板
# -r 标识可重复按键，大概500ms之内
bind -r k select-pane -U # 绑定k为↑
bind -r j select-pane -D # 绑定j为↓
bind -r h select-pane -L # 绑定h为←
bind -r l select-pane -R # 绑定l为→

bind -r e lastp # 选择最后一个面板
bind -r ^e last # 选择最后一个窗口
bind -r ^u swapp -U # 与前一个面板交换位置
bind -r ^d swapp -D # 与后一个面板交换位置

# 面板大小调整
# 绑定ctrl-hjkl为面板上下左右调整边缘的快捷指令
bind -r ^k resize-pane -U 10 # 绑定ctrl-k为往↑调整面板边缘10个单元格
bind -r ^j resize-pane -D 10 # 绑定ctrl-j为往↓调整面板边缘10个单元格
bind -r ^h resize-pane -L 10 # 绑定ctrl-h为往←调整面板边缘10个单元格
bind -r ^l resize-pane -R 10 # 绑定ctrl-l为往→调整面板边缘10个单元格

# # 防止误操作关闭session
# unbind c-d

# 绑定m键为在新的panel打开man
bind m command-prompt "splitw -h 'exec man %%'"

# 绑定P键为开启日志功能，如下，面板的输出日志将存储到桌面
bind P pipe-pane -o "cat >>~/tmux_logs/#W.log" \; display-message "Toggled logging to ~/tmux_logs/#W.log"

# 解决部分命令在mac上不工作
if-shell 'test "$(uname -s)" = Darwin' 'set-option -g default-command "exec reattach-to-user-namespace -l $SHELL"'

# 开启vi风格移动光标
set-window-option -g mode-keys vi # vi key

# ##############
# 使用系统粘贴板
# ##############
# ==== Linux =====
# 以下为Linux环境配置，先安装"sudo apt-get install xclip"
# buffer缓存复制到Linux系统粘贴板
# bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
# Linux系统粘贴板内容复制到session
# bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

# 自定义复制和选择快捷键
# bind Escape copy-mode # 绑定esc键为进入复制模式
# bind-key -T copy-mode-vi v send-keys -X begin-selection # 绑定v键为开始选择文本
# bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel # 绑定y键为复制选中文本
# unbind p
# bind p pasteb # 绑定p键为粘贴文本 (p键默认用于进入上一个窗口，不建议覆盖)
# ====== END ========

# 以下为Mac环境配置，先安装"brew install reattach-to-user-namespace"
# buffer缓存复制到Mac系统粘贴板
bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
# Mac系统粘贴板内容复制到session
bind C-c run "reattach-to-user-namespace pbpaste | tmux load-buffer - \; paste-buffer -d"
# 按下prefix+Ctrl+c 键，buffer缓存的内容将复制到粘贴板，按下prefix+Ctrl+v键，粘贴板的内容将通过load-buffer加载，然后由paste-buffer粘贴到tmux会话中

# 自定义复制和选择快捷键
bind Escape copy-mode # 绑定esc键为进入复制模式
bind-key -T copy-mode-vi v send-keys -X begin-selection # 绑定v键为开始选择文本
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy' # 绑定y键为开始选择文本
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy" # 鼠标拖动选中文本，并复制到Mac系统粘贴板 (很好用)
unbind p
bind p pasteb # 绑定p键为粘贴文本 (p键默认用于进入上一个窗口，不建议覆盖)

set -g @continuum-save-interval '1440' # 自动保存间隔 1天
set -g @continuum-restore 'on' # 启动时自动恢复

# 设置窗口面板起始序号
set -g base-index 1 # 设置窗口的起始下标为1
set -g pane-base-index 1 # 设置面板的起始下标为1

# 自定义状态栏 ==============================================
# set -g status-utf8 on # 状态栏支持utf8 # invaild option, obsolete
# set -g renumber-windows on # 自动重新编号 window
# set -g status-interval 1 # 状态栏刷新时间
# set -g status-justify left # 状态栏列表左对齐
# setw -g monitor-activity on # 非当前窗口有内容更新时在状态栏通知

# set -g status-bg black # 设置状态栏背景为黑色
# set -g status-fg yellow # 设置状态栏前景为黄色
# set -g status-style "bg=black, fg=yellow" # 状态栏前景背景色

# set -g status-left "#[bg=#FF661D] #S" # 状态栏左侧内容
# set -g status-right 'Continuum status: #{continuum_status}'
# set -g status-left-length 300 # 状态栏左侧长度300
# set -g status-right-length 500 # 状态栏右侧长度500

# set -wg window-status-format " #I #W " # 状态栏窗口名称格式
# set -wg window-status-current-format " #I:#W#F " # 状态栏当前窗口名称格式 (#I: 序号, #W: 窗口名称, #F: 间隔符)
# set -wg window-status-separator "" # 状态栏窗口名称之间的间隔
# set -wg window-status-current-style "bg=red" # 状态栏当前窗口名称的样式set -wg window-status-last-style "fg=red" # 状态栏最后一个窗口名称的样式

# set -g message-style "bg=#202529, fg=#91A8BA" # 制定消息通知的前景和背景色

# 自动以状态栏2 ==============================================
# 来自: http://note4code.com/2016/07/03/tmux-%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE/

# set -g status-utf8 on # invaild option, obsolete
# 设定状态位置
set -g status-position bottom

# 自动重新编号 window
set -g renumber-windows on

# 设置自动刷新的时间间隔
set -g status-interval 1
# 状态栏左对齐
set -g status-justify left
# 状态栏左侧宽度
set -g status-left-length 400
# 状态栏右侧宽度
set -g status-right-length 600

# 非当前窗口有内容更新时在状态栏通知
setw -g monitor-activity on
set -g visual-activity on

# 制定消息通知的前景和背景色
set -g message-style "bg=#00346e, fg=#ffffd7"

# 状态栏背景颜色
set -g status-bg '#333333'
# 状态栏前景颜色
set -g status-fg '#ffffff'

# 状态栏左侧显示 session 的名字
set -g status-left "#[bg=#0087ff] ❐ #S "       # blue
# set -g status-left '#[bg=#00bb00] [#W:#I:#S] '
# 状态栏右侧显示时间
#set -g status-right '#[fg=white,bg=#55bb00] [#h] #[fg=white,bg=#009c00] %Y-%m-%d #[fg=white,bg=#007700] %H:%M:%S '
set -g status-right "#{?client_prefix, ⌨ , } #[bg=#0087ff] #(whoami)@#h #[bg=red] %Y-%m-%d %H:%M:%S "

# 未激活每个窗口占位的格式
setw -g window-status-format '#[bg=#0000ff, fg=#ffffff] #I #W '
# 当前激活窗口在状态栏的展位格式
setw -g window-status-current-format '#[bg=#ff0000, fg=#ffffff, bold] #I #W '
set -wg window-status-separator ""
set -wg window-status-current-style "bg=red" # red
set -wg window-status-last-style "fg=red"

set -wg pane-active-border-style "fg=blue"
set -wg pane-border-style "fg=#585858"       # base01

# =================================================
# 按需选用 tmux-256color, xterm-256color, screen-256color
# 使用 echo $TERM 查看当前的环境
# set -g default-terminal "tmux-256color"
# set -g default-terminal "xterm-256color"
set -g default-terminal "screen-256color"

# 关闭默认的rename机制, 提高tmux性能
set -wg automatic-rename off
set -wg allow-rename off
# setw -g utf8 on # invaild option, obsolete

# 启动tpm (tmux plugin manager)
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

set -g set-clipboard on
set -sg escape-time 0
set-option -g history-limit 8000
# set-option -g default-shell /bin/zsh  # 使用 zsh 为默认 shell
set-option -g status-keys vi

# 显示工作区标题
set -g pane-border-status top
set -g pane-border-format "#{pane_index} #T"


run -b '~/.tmux/plugins/tpm/tpm' # 初始化tpm (保证这行在~/.tmux.conf的非常靠后位置)
